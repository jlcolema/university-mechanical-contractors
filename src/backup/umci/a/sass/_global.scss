/*-------------------------------------------
	Global Combos
-------------------------------------------*/


article, aside, details, fig caption, figure, footer, header, group, nav, section { display: block; }

audio, canvas, video {
	display: inline-block;
	*display: inline;
	*zoom: 1;
}


/*-------------------------------------------
	Global Mixins
-------------------------------------------*/


@mixin font-size($font-size: 16) {
	font-size: #{$font-size}px;
	font-size: #{$font-size / 10}rem;
}

// Retina

@mixin retina() {

	@media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {

		@content;

	}

}

// Breakpoints

@mixin breakpoint($min-or-max, $width) {

	@media only screen and ($min-or-max: $width) {
	
		@content;
		
	}
	
}

// Mozilla Fixes

@mixin mozilla {

	@-moz-document url-prefix() {
	
		@content;
		
	}

}

@mixin group {

	&:after {
		content: ".";
		display: block;
		height: 0;
		clear: both;
		visibility: hidden;
		font-size: 0;
	}

	.lt-ie8 & { zoom: 1; }

}

@mixin box-sizing {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

@mixin transition($trans: all, $time: 0.25s, $ease: linear) {
	-webkit-transition: $trans $time $ease;
	-moz-transition: $trans $time $ease;
	-ms-transition: $trans $time $ease;
	-o-transition: $trans $time $ease;
	transition: $trans $time $ease;  
}

@mixin border-radius($top-left: 5px, $top-right: 5px, $bottom-right: 5px, $bottom-left: 5px) {
	-webkit-border-radius: $top-left $top-right $bottom-right $bottom-left;
  	border-radius: $top-left $top-right $bottom-right $bottom-left;
}

@mixin box-shadow($top: 1px, $left: 1px, $blur: 1px, $spread: 0, $color: rgba(0, 0, 0, .85), $inset: false) {

	@if $inset {

		-webkit-box-shadow: inset $top $left $blur $spread $color;
		box-shadow: inset $top $left $blur $spread $color;

	} @else {

		-webkit-box-shadow: $top $left $blur $spread $color;
		box-shadow: $top $left $blur $spread $color;

	}

}

// Gradients

@mixin horizontal($startColor: $white, $endColor: $lightergrey) {
	background-color: $endColor;
	background-image : -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
	background-image : -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
	background-image : -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
	background-image : -ms-linear-gradient(left, $startColor, $endColor); // IE10
	background-image : -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
	background-image : linear-gradient(left, $startColor, $endColor); // W3C
	background-repeat: repeat-x;
	}

@mixin vertical($startColor: $white, $endColor: $lightergrey) {
	background-image : -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
	background-image : -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
	background-color : $endColor;
	background-image : -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
	background-image : -ms-linear-gradient(top, $startColor, $endColor); // IE10
	background-image : -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
	background-image : linear-gradient(top, $startColor, $endColor); // W3C
	background-repeat: repeat-x;
	}

@mixin directional($startColor: $white, $endColor: $lightergrey, $deg: 45deg) {
	background-color : $endColor;
	background-image : -moz-linear-gradient($deg, $startColor, $endColor); // FF 3.6+
	background-image : -ms-linear-gradient($deg, $startColor, $endColor); // IE10
	background-image : -webkit-linear-gradient($deg, $startColor, $endColor); // Safari 5.1+, Chrome 10+
	background-image : -o-linear-gradient($deg, $startColor, $endColor); // Opera 11.10
	background-image : linear-gradient($deg, $startColor, $endColor); // W3C
	background-repeat: repeat-x;
	}

// .bordered(COLOR, COLOR, COLOR, COLOR);

@mixin bordered($top-color: #eee, $right-color: #eee, $bottom-color: #eee, $left-color: #eee) {
	border-top: solid 1px $top-color;
	border-left: solid 1px $left-color;
	border-right: solid 1px $right-color;
	border-bottom: solid 1px $bottom-color;
	}

// @include box-shadow(HORIZONTAL VERTICAL BLUR COLOR))

@mixin box-shadow($shadows...) {
	-webkit-box-shadow: $shadows;
	-moz-box-shadow: $shadows;
	box-shadow: $shadows;
	}

// @include opacity(VALUE);

@mixin opacity($opacity: .50) {
	-webkit-opacity: $opacity;
	-moz-opacity: $opacity;
	opacity: $opacity;
	}

// .rotate(VALUEdeg);

@mixin rotate($deg) {
	-webkit-transform: rotate($deg);
	-moz-transform: rotate($deg);
	-ms-transform: rotate($deg);
	-o-transform: rotate($deg);
	transform: rotate($deg);
	}

// .scale(VALUE);

@mixin scale($ratio) {
	-webkit-transform: scale($ratio);
	-moz-transform: scale($ratio);
	-ms-transform: scale($ratio);
	-o-transform: scale($ratio);
	transform: scale($ratio);
	}

// .skew(VALUE, VALUE);

@mixin skew($x: 0, $y: 0) {
	-webkit-transform: skew($x, $y);
	-moz-transform: skew($x, $y);
	-ms-transform: skew($x, $y);
	-o-transform: skew($x, $y);
	transform: skew($x, $y);
	}

// @include transition(PROPERTY DURATION DELAY(OPTIONAL) TIMING-FINCTION);

@mixin transition($transitions...) {
	-webkit-transition: $transitions;
	-moz-transition: $transitions;
	-ms-transition: $transitions;
	-o-transition: $transitions;
	transition: $transitions;
	}

// @include background-alpha(VALUE VALUE);

@mixin background-alpha($color: $white, $alpha: 1) { background-color: hsla(hue($color), saturation($color), lightness($color), $alpha); }

// @include background-size(VALUE VALUE);

@mixin background-size($size){
	-webkit-background-size: $size;
	-moz-background-size: $size;
	-o-background-size: $size;
	background-size: $size;
	}

// .background-clip(VALUE); (border-box, padding-box, content-box)

@mixin background-clip($clip) {
	-webkit-background-clip: $clip;
	-moz-background-clip: $clip;
	background-clip: $clip;
	}

// For image replacement

@mixin hide-text() {
	text-indent: -9999px;
	white-space: nowrap;
	overflow: hidden;
	}

// Hide from visual and speaking browsers

@mixin hidden() {
	display: none !important;
	visibility: hidden;
	}

// Hide but maintain layout

@mixin invisible() { visibility: hidden; }

// Hidden but available to speaking browsers

@mixin visuallyhidden() {

	overflow: hidden;
	position: absolute;
	clip: rect(0 0 0 0);
	height: 1px;
	width: 1px;
	margin: -1px;
	padding: 0;
	border: 0;

	// Make visuallyhidden focusable with a keyboard
	
	&.focusable {

		&:active,
		&:focus {
			position: static;
			clip: auto;
			height: auto;
			width: auto;
			margin: 0;
			overflow: visible;
			}
			
	}
	
}